
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ТекстЗапроса", ТекстЗапроса) Тогда
		Элементы.ФормаПеренестиВОтчет.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВОтчет(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветОСохранении", ЭтотОбъект);
	
	ТекстВопроса = "Перенести в отчет текст запроса " + Формат(ЗаполнятьПоля, "БЛ=; БИ='и поля '") + "?";
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,, "Сохранение данных");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветОСохранении(Ответ, ДопПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВладелецФормы.Объект.ТекстЗапроса = ТекстЗапроса;
		
		Если ЗаполнятьПоля Тогда
			ВладелецФормы.Объект.ПоляЗапроса.Очистить();
			
			Для Каждого СтрокаДанных Из ТаблицаПолей Цикл
				ЗаполнитьЗначенияСвойств(ВладелецФормы.Объект.ПоляЗапроса.Добавить(), СтрокаДанных);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция НачатьВыполнениеЗапроса(ТекстЗапроса, ИнформацияОВыполнении = Неопределено)
	
	ОбщееВремяНачало = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	РезультатВыполнения = КликХаусСервер.ВыполнитьЗапросНаСервере(ТекстЗапроса, ИнформацияОВыполнении);
	
	ТекущаяДатаПреобразованиеJSONНачало = ТекущаяУниверсальнаяДатаВМиллисекундах();	
	Результат = КликХаусСервер.ПреобразоватьИнформациюОВыполненииВТабличныйДокумент(ИнформацияОВыполнении, РезультатВыполнения);
	ТекущаяДатаПреобразованиеJSONКонец = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если Не ИнформацияОВыполнении = Неопределено Тогда
		ИнформацияОВыполнении.Вставить("ОбщееВремя", (ТекущаяДатаПреобразованиеJSONКонец - ОбщееВремяНачало) / 1000);
		ИнформацияОВыполнении.Вставить("ВремяПреобразования", (ТекущаяДатаПреобразованиеJSONКонец - ТекущаяДатаПреобразованиеJSONНачало) / 1000);
	КонецЕсли;
	
	Если ЗаполнятьПоля Тогда
		ЗаполнитьНаименованияПолей(ИнформацияОВыполнении);
	КонецЕсли;
	
	Возврат ЗаполнитьИнформацию(ИнформацияОВыполнении)
	
КонецФункции

&НаКлиенте
Функция ЗаполнитьИнформацию(ИнформацияОВыполнении)
	
	Если ИнформацияОВыполнении = Неопределено Тогда
		ПрочитаноБайт = 0;
		ПрочитаноВремя = 0;
		ПрочитаноСтрок = 0;
		КоличествоСтрок = 0;   
		ВремяВыполненияHTTP = 0;
		ВремяПреобразованияJSON = 0;
		ВремяЧтенияJSON = 0;
		ОбщееВремяВыполнения = 0;
		
		Возврат Ложь;
		
	Иначе
		ПрочитаноБайт = ИнформацияОВыполнении.statistics.bytes_read;
		ПрочитаноВремя = ИнформацияОВыполнении.statistics.elapsed;
		ПрочитаноСтрок = ИнформацияОВыполнении.statistics.rows_read;
		КоличествоСтрок = ИнформацияОВыполнении.rows;
		ВремяВыполненияHTTP = ИнформацияОВыполнении.ВремяВыполненияHTTPЗапроса;
		ВремяПреобразованияJSON = ИнформацияОВыполнении.ВремяПреобразования;
		ВремяЧтенияJSON =  ИнформацияОВыполнении.ВремяЧтенияJSON;
		ОбщееВремяВыполнения = ИнформацияОВыполнении.ОбщееВремя;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьНаименованияПолей(ИнформацияОВыполнении)
	
	ТаблицаПолей.Очистить();
	
	Если ИнформацияОВыполнении = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаСтруктуры Из ИнформацияОВыполнении.meta Цикл
		НоваСтрока = ТаблицаПолей.Добавить();
		НоваСтрока.Наименование = СтрокаСтруктуры.name;
		НоваСтрока.Тип = ОпределитьТипПоля(СтрокаСтруктуры.type);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьТипПоля(ТипПоляCH)
	
	Если ТипПоляCH = "String" Тогда
		Возврат "Строка";
		
	ИначеЕсли Не СтрНайти(НРег(ТипПоляCH), "int") = 0 
		     ИЛИ Не СтрНайти(НРег(ТипПоляCH), "float") = 0 Тогда 
		Возврат 9.99;
		
	ИначеЕсли Не СтрНайти(НРег(ТипПоляCH), "date") = 0 Тогда 
		Возврат Дата(1970,1,1);
		
	Иначе
		Возврат "Строка";
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура ПолучитьСписокБаз(Команда)
	
	ИнформацияОВыполнении = Неопределено;
	Элементы.ИмяБазы.СписокВыбора.Очистить();
	
	Если Не НачатьВыполнениеЗапроса("show databases", ИнформацияОВыполнении) Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого СтрокаДанных Из ИнформацияОВыполнении.data Цикл
		Элементы.ИмяБазы.СписокВыбора.Добавить(СтрокаДанных.name);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписокТаблиц(Команда)
	
	ИнформацияОВыполнении = Неопределено;
	Элементы.ИмяТаблицы.СписокВыбора.Очистить();
	
	Если Не ПустаяСтрока(ИмяБазы) Тогда
		ТекстЗапросаСервер = "show tables from " + ИмяБазы;
	Иначе
		ТекстЗапросаСервер = "show tables";
	КонецЕсли;
	
	Если Не НачатьВыполнениеЗапроса(ТекстЗапросаСервер, ИнформацияОВыполнении) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ИнформацияОВыполнении.data Цикл
		Элементы.ИмяТаблицы.СписокВыбора.Добавить(СтрокаДанных.name);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОписаниеТаблицы(Команда)
	
	Если Не ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Сообщить("Заполните наименование таблицы");
		Возврат;
	КонецЕсли;
		
	
	Если ЗначениеЗаполнено(ИмяБазы) Тогда
		ТекстЗапросаСервер = "desc " + ИмяБазы + "." + ИмяТаблицы;
	Иначе
		ТекстЗапросаСервер = "desc " + ИмяБазы;
	КонецЕсли;
	
	НачатьВыполнениеЗапроса(ТекстЗапросаСервер)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	НачатьВыполнениеЗапроса(ТекстЗапроса);
КонецПроцедуры
